import copy

class Rectangle:
    """ A class to manufacture rectangle objects """

    def __init__(self, posn, w, h):
        """ Initialize rectangle at posn, with width w, height h """
        self.corner = posn
        self.width = w
        self.height = h

    def __str__(self):
        return  "({0}, {1}, {2})"
                  .format(self.corner, self.width, self.height)
    
    def grow(self, delta_width, delta_height):
        """ Grow (or shrink) this object by the deltas """
        self.width += delta_width
        self.height += delta_height

    def move(self, dx, dy):
        """ Move this object by the deltas """
        self.corner.x += dx
        self.corner.y += dy
    
    def same_coordinates(p1, p2):
    return (p1.x == p2.x) and (p1.y == p2.y)
    
    def area(self, x, y, z, d):
      r = Rectangle(Point(x, y), z, d)
      test(r.area() == +(x-z)*+(y-d))


box = Rectangle(Point(0, 0), 100, 200)
bomb = Rectangle(Point(100, 80), 5, 10)    # In my video game
print("box: ", box)
print("bomb: ", bomb)
r = Rectangle(Point(10,5), 100, 50)
print(r)
r.grow(25, -10)
print(r)
r.move(-10, 10)
print(r)
p1 = Point(3, 4)
p2 = Point(3, 4)
same_coordinates(p1, p2)
p1 = Point(3, 4)
p2 = copy.copy(p1)
p1 is p2
same_coordinates(p1, p2)

